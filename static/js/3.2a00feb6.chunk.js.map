{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","classes","discriptionBlock","src","photos","large","Preloader","Post","item","message","likes","MyPosts","React","memo","postsElements","posts","map","p","newPostElement","createRef","postsBlock","text","current","updateNewPostText","ref","newPostText","onClick","values","addPost","MyPostsContainer","connect","state","profilePage","dispatch","updateNewTextCreator","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserId","getStatus","Component","compose","isAuth","auth","withRouter"],"mappings":"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","file":"static/js/3.2a00feb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__3HzxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogitem\":\"Post_dialogitem__bso_p\",\"item\":\"Post_item__ihtu9\"};","import React, {useState, useEffect} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status])\n    const  activateEditMode = () => {\n        setEditMode(true)\n    }\n\n   const deactivateEditMode = () => {\n       setEditMode(false)\n       props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n        return (\n            <div>\n                { !editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\n                </div>\n                }\n                {editMode &&\n                <div>\n                    <input  autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}\n                    ></input>\n                </div>\n                }\n            </div>\n        )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={classes.discriptionBlock}>\n                <img src={profile.photos.large}/>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n         </div>\n    )\n}\n\nexport default ProfileInfo;","import classes from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n\n        <div className={classes.item}>\n            <img src='https://starnote.ru/media/starnote/v3/main/2015/10/15/po-motivam-filma-avatar-vypustjat-komiksy.jpg'></img>\n            {props.message}\n            <div><span>like {props.likes}</span></div>\n        </div>\n    )\n}\n\nexport default Post;","import classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from \"react\";\n\nconst MyPosts = React.memo(props => {\n    let postsElements = props.posts.map(p => <Post message={p.message} likes={p.likes}/>);\n\n    let newPostElement = React.createRef();\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        props.updateNewPostText(text);\n    }\n    return (\n        <div className={classes.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div><textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/></div>\n                <div>\n                    <button onClick={onAddPost}>Add post</button>\n                </div>\n            </div>\n            <div className={classes.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\n\nexport default MyPosts;","import * as React from \"react\";\nimport {addPostActionCreator, updateNewTextCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n   return {\n       posts: state.profilePage.posts,\n       newPostText: state.profilePage.newPostText\n   }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewPostText:(text) => {dispatch(updateNewTextCreator(text));\n        },\n        addPost: () => {dispatch(addPostActionCreator());},\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n\n","import classes from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.content}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {getUserId, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component{\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if(!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n       this.props.getUserId(userId);\n        this.props.getStatus(userId);\n    }\n    render() {\n        return (\n                <Profile {...this.props}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return ({\n                profile: state.profilePage.profile,\n                status: state.profilePage.status,\n                isAuth: state.auth.isAuth,\n                authorizedUserId: state.auth.userId\n            })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserId, getStatus, updateStatus}),\n    withRouter,\n)(ProfileContainer);"],"sourceRoot":""}